Lab Assignment
1.
m a n SP m a n
m a n SP - k SP p r i n t f

2.
w h i c h SP c p
w h i c h SP w c
l s SP / u s r / l o c a l / b i n 

3. 
c d SP / u s r / b i n
l s SP - l ?
m a n SP w
. / w
m a n SP [
h e l p SP [

4.
l s SP - l SP / u s r / b i n / e m a c s

5.
m a n SP c h m o d

6.
m a n SP f i n d
/ t i m e

7.
f i n d SP / SP - t y p e SP d SP - c t i m e SP - 2 1

8.
w h i c h SP f i n d
c d SP / u s r / b i n
m a n SP w c
m a n SP f i n d
m a n SP l s
m a n SP g r e p
l s SP - l SP | SP g r e p SP ^ l SP | SP w c SP -l

9. 
c d SP / u s r / l i b
m a n SP l s
l s SP - l t

10.
l o c a l e
m a n SP l o c a l e

Homework 1.1
2. C-s SP P U B L I C
3. Esc-< C-s L a b o r a t o r y Esc-b
4. Esc-< C-s s e l f - r e f e r e n t i a l Esc-b Esc-b
5. Esc-< C-s a r r o w Esc-b
6. C-e
7. C-a
8. Did it most efficient way first time
9. Did not repeat
10. C-x C-c
 
Homework 1.2
2. Esc-x g o t o - l i n e Enter 1 8 Enter C-k
3. C-s D E L E T E M E C-a C-k
4. C-s h t t p s : / / e n . w i k i p e d i a . o r g / w i k i / H T M L _ 
c o m m e n t # C o m m e n t s Enter C-p C-a C-u 3 C-k 
5. C-s C-a < ! C-a C-k
C-s < ! - - - - > Enter C-u 7 C-b C-u 7 C-d  

Homework 1.3
2. C-s A s s i g n m e n t SP 1 Enter Backspace 3 7 
C-s Enter Enter Backspace 3 7
3. Esc-% U T F - 8 Enter U S - A S C I I Enter y
4. C-s < / o l > Enter C-p C-e C-j

Homework 1.4
3. Esc-> C-u 2 C-p C-SPACE C-n Esc-w Esc-g g 355 Enter C-y Backspace C-a C-d
4. ESc-> C-u 21 C-p C-Space C-n C-n C-n Esc-w Esc-g g C-y C-p C-d C-p C-d C-p
C-d
    Esc-> C-u 30 C-p C-SPACE C-n Esc-w Esc-g g 9 3 Enter C-y Backspace C-a C-d
    Esc-> C-u 40 C-p C-SPACE C-n C-n Esc-w Esc-g g 18 Enter C-y Backspace C-a
    C-d 
5. C-s < ! - - SP e n d Enter C-n C-Space Esc-> C-w 
6. C-/
7. - - > C-p C-p C-p C-r < ! - - e Enter C-n < ! - -
8. Esc-< C-s < 0 l > C-s C-s C-s C-s C-s C-s Esc-< Esc-% < o l > Enter < 0 l > 
Enter !

Homework 1.5
1. Esc-x m a k e - d i r e c t o r y Enter j u n k Enter
2. C-x C-f j u n k / h e l l o . c
3. Esc-x c o m p i l e Enter g c c SP h e l l o . c Enter
4. C-x b h e l l o - o u t C-u M-! . / a . o u t Enter
5. 
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Homework 1.6
1. C-x-b C-x o C-n Enter
2. ( r a n d o m ( ) ) C-j Enter
3. ( s e t q SP x SP ( r a n d o m ) ) 
( s e t q SP y SP ( r a n d o m ) )
4. ( * SP x SP y ) 
The product of two variables is -1161840570376276080.  This answer is not
correct, since x was 495775379665696080 and y was
-697750890435836011, sp the answer is too small to be a correct answer
5. This evaulates to the same expression, but also gives the octadecimal and
hexadecimal values. -1161840570376276080 (#o277402402405505333620,
the two variables used in the evaulation.
#x2fe050282d15b790)
6. No random numbers are truly random, because random is most likely inplemented
by using an internal clock as a factor.  Thus the only random part about random
numbers is when the user executes this random function.
7. If random were truly random, the numbers that random could output would
approach infinity, and so the probability the product of two truly random
numbers being numerically correct is close to zero, because the product must be
able to fit inside memory of an integer in Lisp.  Thus, the probability that the
product would be incorrect is very close to 100%.
